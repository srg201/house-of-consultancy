version: "3.8"

services:
  cms:
    build:
      context: ./cms
      dockerfile: Dockerfile
    volumes:
      - ./cms:/app
      - /app/node_modules
    ports:
      - "1337:1337"
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:1337
      - API_URL=http://cms:1337
    depends_on:
      - cms
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=strapi
      - POSTGRES_PASSWORD=strapi
      - POSTGRES_DB=strapi
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf # Конфигурация Nginx
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - cms
      - frontend
    restart: unless-stopped

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
